<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2014 Denzil Gideon M. Daulo

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License. -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	   		http://www.springframework.org/schema/context
	   		http://www.springframework.org/schema/context/spring-context-3.2.xsd
	   		http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
			http://www.springframework.org/schema/jdbc
			http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd">
	
	<context:annotation-config/>
	
	<context:component-scan base-package="com.zil.seraphim" /><!-- change component-scan package -->
	
	<mvc:annotation-driven /> 
	
	<context:property-placeholder location="classpath:config.properties" />
	
    <bean 	id="messageSource" 
    		class="org.springframework.context.support.ResourceBundleMessageSource"
    		p:basename="Messages"/>
    		
 	    
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- transactionManager for MyBatis -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
  		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- define the SqlSessionFactory, notice that configLocation is not needed when you use MapperFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis.xml" />
    </bean>
	
	<!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.zil.seraphim.mapper" /> <!-- change basePackage value -->
    </bean>
    
  <!-- transactionManager for Hibernate -->
  <!--
    <bean 	id="transactionManager" 
    		class="org.springframework.orm.hibernate4.HibernateTransactionManager" 
       		p:sessionFactory-ref="sessionFactory" />
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
	    <property name="dataSource" ref="dataSource"/>
	    <property name="hibernateProperties">
	      <props>        
	            <prop key="hibernate.dialect">${hibernate.dialect}</prop>          
	            <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>        
	       </props>
	    </property>
		<property name="packagesToScan" value="com.seraphim"/>
	</bean>
 -->	
	
	<!-- Configure to plugin JSON as request and response in method handler -->
     <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jsonMessageConverter"/>
            </list>
        </property>
    </bean>
     
   <!-- Configure bean to convert JSON to POJO and vice versa-->
    <bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>
     
    <!-- datasource --> 
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"
			p:driverClassName="${db.driver}"
			p:url="${db.url}"
			p:username="${db.username}"
			p:password="${db.password}"/>
	  
</beans>